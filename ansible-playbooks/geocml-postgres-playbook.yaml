---
- # Configure PostgreSQL + PostGIS
  hosts: localhost
  connection: local
  gather_facts: yes
  become: yes
  tasks:
    - name: Start PostgreSQL service
      service:
        enabled: yes
        name: postgresql
        state: started
        use: service
    - name: Allow postgres to sign in with peer authentication
      become_user: postgres
      community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/14/main/pg_hba.conf
        address: local
        users: postgres
        method: peer
        create: yes
    - name: Set postgres' password
      become_user: postgres
      community.postgresql.postgresql_user:
        name: postgres
        password: "{{ lookup('env', 'GEOCML_POSTGRES_ADMIN_PASSWORD') }}"
    - name: Create new Postgres user
      become_user: postgres
      community.postgresql.postgresql_user:
        name: geocml
        password: "{{ lookup('env', 'GEOCML_POSTGRES_PASSWORD') }}"
        role_attr_flags: "CREATEDB,NOSUPERUSER"
    - name: Create new Postgres database
      become_user: postgres
      community.postgresql.postgresql_db:
        name: geocml_db
        conn_limit: 100 # TODO: Do we need to limit this? Might be good to give people the option
    - name: Give geocml full privs to geocml_db
      become_user: postgres
      community.postgresql.postgresql_privs:
        type: database
        database: geocml_db
        roles: geocml
        grant_option: no
        privs: all
    - name: Set geocml as owner of geocml_db
      become_user: postgres
      community.postgresql.postgresql_owner:
        db: geocml_db
        new_owner: geocml
    - name: Allow traffic from all sources with encrypted password validation
      become_user: postgres
      community.postgresql.postgresql_pg_hba:
        dest: /etc/postgresql/14/main/pg_hba.conf
        contype: host
        users: all
        source: 0.0.0.0/0
        databases: all
        method: md5
        create: yes
    - name: Listen for traffic on all IPs
      become_user: postgres
      community.postgresql.postgresql_set:
        name: listen_addresses
        value: "*"
    - name: Set PSQL service port # RM ME!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      become_user: postgres
      community.postgresql.postgresql_set:
        name: port # RM ME!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        value: 5434 # RM ME!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    - name: Add PostGIS extension to geocml_db
      become_user: postgres
      community.postgresql.postgresql_ext:
        db: geocml_db
        name: postgis
    - name: Enable postgis_raster extension
      become_user: postgres
      community.postgresql.postgresql_query:
        db: geocml_db
        query: CREATE EXTENSION postgis_raster;
    - name: Restart PostgreSQL service
      service:
        enabled: yes
        state: restarted
        name: postgresql
        use: service
